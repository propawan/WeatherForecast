[{"/Users/unthinkable-mac-0021/Documents/ReactTrial/first-proj/src/index.js":"1","/Users/unthinkable-mac-0021/Documents/ReactTrial/first-proj/src/App.js":"2","/Users/unthinkable-mac-0021/Documents/ReactTrial/first-proj/src/reportWebVitals.js":"3","/Users/unthinkable-mac-0021/Documents/ReactTrial/first-proj/src/Card.js":"4","/Users/unthinkable-mac-0021/Documents/ReactTrial/first-proj/src/DropDown.js":"5"},{"size":500,"mtime":1611129486869,"results":"6","hashOfConfig":"7"},{"size":1099,"mtime":1611816898445,"results":"8","hashOfConfig":"7"},{"size":362,"mtime":1611129486870,"results":"9","hashOfConfig":"7"},{"size":997,"mtime":1611752765497,"results":"10","hashOfConfig":"7"},{"size":1047,"mtime":1611749583627,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"1is8y5t",{"filePath":"15","messages":"16","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"14"},"/Users/unthinkable-mac-0021/Documents/ReactTrial/first-proj/src/index.js",[],["24","25"],"/Users/unthinkable-mac-0021/Documents/ReactTrial/first-proj/src/App.js",[],"/Users/unthinkable-mac-0021/Documents/ReactTrial/first-proj/src/reportWebVitals.js",[],"/Users/unthinkable-mac-0021/Documents/ReactTrial/first-proj/src/Card.js",[],"/Users/unthinkable-mac-0021/Documents/ReactTrial/first-proj/src/DropDown.js",["26","27","28"],"import { useState } from 'react'\n\nconst DropDown = ({ setCurrCountry }) => {\n    const [country, setCountry] = useState(\"London\");\n    return (\n        <div>\n            <div className=\"dropdown\" style={{ textAlign: 'center' }}>\n                <button className=\"btn btn-secondary dropdown-toggle\" type=\"button\" id=\"dropdownMenuButton\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\n                    {country}\n                </button>\n                <div className=\"dropdown-menu\" aria-labelledby=\"dropdownMenuButton\">\n                    <a className=\"dropdown-item\" onClick={() => { setCountry(\"Delhi\"); setCurrCountry(\"Delhi\"); }} href=\"#\">DELHI</a>\n                    <a className=\"dropdown-item\" onClick={() => { setCountry(\"England\"); setCurrCountry(\"England\"); }} href=\"#\">ENGLAND</a>\n                    <a className=\"dropdown-item\" onClick={() => { setCountry(\"London\"); setCurrCountry(\"London\"); }} href=\"#\">LONDON</a>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default DropDown;",{"ruleId":"29","replacedBy":"30"},{"ruleId":"31","replacedBy":"32"},{"ruleId":"33","severity":1,"message":"34","line":12,"column":21,"nodeType":"35","endLine":12,"endColumn":125},{"ruleId":"33","severity":1,"message":"34","line":13,"column":21,"nodeType":"35","endLine":13,"endColumn":129},{"ruleId":"33","severity":1,"message":"34","line":14,"column":21,"nodeType":"35","endLine":14,"endColumn":127},"no-native-reassign",["36"],"no-negated-in-lhs",["37"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-global-assign","no-unsafe-negation"]